//TIENE ERRORES

//LIBRERÍAS
#include <avr/wdt.h> //libreria del watchdog

#include <SPI.h>          // f.k. for Arduino-1.5.2
#include "Adafruit_GFX.h"// Hardware-specific library
#include <MCUFRIEND_kbv.h>
MCUFRIEND_kbv tft;
//#include <Adafruit_TFTLCD.h>
//Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);

//PINES TFT
/*#define LCD_CS A3 // Chip Select goes to Analog 3
#define LCD_CD A2 // Command/Data goes to Analog 2
#define LCD_WR A1 // LCD Write goes to Analog 1
#define LCD_RD A0 // LCD Read goes to Analog 0
#define LCD_RESET A4 // Can alternately just connect to Arduino's reset pin*/

//PINES ULTRASONIDOS
#define EchoPin 2
#define TriggerPin 4

//PINES MOTOR
int motor = 9;

//PINES LED
int pinR=6;
int pinG=5;
int pinB=3;

//COLORES
#define  BLACK   0x0000
#define BLUE    0x001F
#define RED     0xF800
#define GREEN   0x07E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define WHITE   0xFFFF
#define VIOLET 0xB527E1

//VARIABLES
int currentPage;
String Lectura = "0";
int sigue;
int numVidaTFT = 7;
int numVida = 0;

void setup() {
  //TFT
  tft.begin(0x9486);
  Serial.begin(9600);
  Serial.println("Holi");
  tft.setRotation(1);
  drawHomeScreen();
  currentPage = 0;

  //ULTRASONIDOS
  pinMode(TriggerPin, OUTPUT);
  pinMode(EchoPin, INPUT);

  //MOTOR
  pinMode(motor, OUTPUT);
  digitalWrite(motor, HIGH);

  //LED
  pinMode(pinR,OUTPUT);
  pinMode(pinG,OUTPUT);
  pinMode(pinB,OUTPUT);
}

void loop() {
//ENCENDEMOS ULTRASONIDOS
  digitalWrite(TriggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(TriggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(TriggerPin, LOW);
  int valorEntrada = pulseIn(EchoPin, HIGH);
  //delayMicroseconds(2);
  int distancia = valorEntrada/58.2; //valor en cm


   if(distancia>7 && distancia<25){
    Serial.println("PRESS");
   }
   delay(100);
  
//RECIBIR LECTURA
if(currentPage == 0 && Serial.available() > 0){
Lectura = Serial.readStringUntil('\n');
Lectura = Lectura.substring(0, Lectura.length());
Serial.println(Lectura);
    }

   //RECIBO
    else if(Lectura=="YesStart"){
      drawInGameScreen();
      Lectura="0";
    }

    else if(Lectura=="pierdeVida"){
      drawDamageScreen();

      //VALORES numVida
      numVidaTFT--;
      numVida++;
      Serial.print("numVida: ");
      Serial.println(numVida);
      drawInGameScreen();

      //ENCENDEMOS MOTOR
      digitalWrite(motor, LOW);
      delay(1000 );
      //analogWrite(motor, 0);
      digitalWrite(motor, HIGH);
      
      Lectura = "";
    }

    else if(Lectura=="victory"){
      drawVictoryScreen();

      analogWrite(pinG, 0);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 255);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 0);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 0);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 0);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);

      //ENCENDEMOS MOTOR
    digitalWrite(motor, LOW);
    delay(2000);

    reset();
      
      Lectura="";
    }
    
    else if(Lectura=="muere" || numVidaTFT <= 0){
      drawGameOverScreen();
      Lectura="";
    }

    else if(Lectura=="home"){
      drawHomeScreen ();
      Lectura="";
    }

    //CAMBIOS DE COLORES LED
    if(numVida== 0 || numVida == 1 || numVida == 2 || numVida == 3){
      analogWrite(pinG, 0);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
    }

    if(numVida== 4 || numVida == 5){
      analogWrite(pinG, 0);
      analogWrite(pinR, 100);
      analogWrite(pinB, 255);
    }

    if(numVida== 6 || numVida == 7){
      analogWrite(pinG, 255);
      analogWrite(pinR, 0);
      analogWrite(pinB, 255);
    }

    if(numVida == 7 || Lectura=="muere"){
      analogWrite(pinG, 255);
      analogWrite(pinR, 0);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 255);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 255);
      analogWrite(pinR, 0);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 255);
      analogWrite(pinR, 255);
      analogWrite(pinB, 255);
      delay(500);
      analogWrite(pinG, 255);
      analogWrite(pinR, 0);
      analogWrite(pinB, 255);

      //ENCENDEMOS MOTOR
    digitalWrite(motor, LOW);
    delay(1000);
    //analogWrite(motor, 0);
    digitalWrite(motor, HIGH);
      
      delay(1000);

      reset();
    }
}
}

//480 (ancho x) x320 (alto y)
void drawHomeScreen (){
  //TÍTULO
  tft.fillScreen(BLACK);
  tft.setTextColor(MAGENTA);
  tft.setTextSize(11);
  tft.setCursor(80, 60);
  tft.print("SPACE");
  tft.setCursor(50, 160);
  tft.print("ODDITY");
  delay(250);

  //STARS
  tft.fillRect(20, 100, 7, 7, YELLOW);
  tft.fillRect(400, 100, 7, 7, WHITE);
  tft.fillRect(200, 30, 7, 7, WHITE);
  tft.fillRect(150, 300, 7, 7, YELLOW);
  tft.fillRect(80, 30, 7, 7, WHITE);
  tft.fillRect(450, 30, 7, 7, WHITE);
  tft.fillRect(20, 240, 7, 7, WHITE);
  tft.fillRect(35, 300, 7, 7, WHITE);
  tft.fillRect(250, 210, 7, 7, WHITE);
  tft.fillRect(450, 210, 7, 7, YELLOW);
  tft.fillRect(390, 290, 7, 7, WHITE);
  tft.fillRect(450, 300, 7, 7, WHITE);
  tft.fillRect(300, 280, 7, 7, WHITE);
}




void drawInGameScreen(){
    //PLAY
    tft.fillScreen(BLACK);
    tft.setTextColor(GREEN);
    tft.setTextSize(8);
    tft.setCursor(28, 80);
    tft.print("PLAY!");

    //VIDAS
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(28, 185);
    tft.print("Vidas: ");

    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(310, 185);
    tft.print("x");

    if(numVidaTFT==7){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("7");}
    
    else if(numVidaTFT==6){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("6");}

    else if(numVidaTFT==5){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("5");}

    else if(numVidaTFT==4){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("4");}

    else if(numVidaTFT==3){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("3");}

    else if(numVidaTFT==2){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("2");}

    else if(numVidaTFT==1){
    tft.setTextColor(MAGENTA);
    tft.setTextSize(8);
    tft.setCursor(370, 185);
    tft.print("1");}
    
}
void drawDamageScreen(){
      //PARPADEO DAMAGE
      tft.fillScreen(BLACK);
      tft.fillRect(0, 100, 480, 100, RED);
      tft.setTextColor(WHITE);
      tft.setTextSize(8);
      tft.setCursor(95, 120);
      tft.print("DAMAGE");
      delay(500);
      tft.fillScreen(BLACK);
      delay(500);
      tft.fillScreen(BLACK);
      tft.fillRect(0, 100, 480, 100, RED);
      tft.setTextColor(WHITE);
      tft.setTextSize(8);
      tft.setCursor(95, 120);
      tft.print("DAMAGE");
      delay(500);

      drawInGameScreen();
}

void drawGameOverScreen(){
      //GAME OVER
      tft.fillScreen(BLACK);
      tft.fillRect(0, 100, 480, 100, RED);
      tft.setTextColor(WHITE);
      tft.setTextSize(7);
      tft.setCursor(45, 120);
      tft.print("Game Over!");
      delay(500);
      tft.fillScreen(BLACK);
      delay(500);
      tft.fillScreen(BLACK);
      tft.fillRect(0, 100, 480, 100, RED);
      tft.setTextColor(WHITE);
      tft.setTextSize(7);
      tft.setCursor(45, 120);
      tft.print("Game Over!");
      delay(500);
      tft.fillScreen(BLACK);
      delay(500);
      tft.fillScreen(BLACK);
      tft.fillRect(0, 100, 480, 100, RED);
      tft.setTextColor(WHITE);
      tft.setTextSize(7);
      tft.setCursor(45, 120);
      tft.print("Game Over!");
      delay(500);

      drawHomeScreen();
      }

void drawVictoryScreen(){
      tft.fillScreen(BLACK);
      tft.fillRect(0, 100, 480, 100, GREEN);
      tft.setTextColor(WHITE);
      tft.setTextSize(7);
      tft.setCursor(70, 120);
      tft.print("VICTORY");
      delay(2000);

      drawHomeScreen();
    }

void reset(){
  wdt_enable(WDTO_15MS);
  while(1){};
}
